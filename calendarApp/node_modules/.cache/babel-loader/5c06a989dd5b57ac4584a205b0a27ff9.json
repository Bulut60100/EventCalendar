{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/dene/takvim/CalendarApp/frontend/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CalendarGrid } from './components/calendar/CalendarGrid';\nimport { Title } from './components/calendar/Title';\nimport { Monitor } from './components/calendar/Monitor';\nimport Navbar from './layouts/Navbar';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ShadowWrapper = styled('div')`\n  border-top: 1px solid #737374;\n  border-left: 1px solid #464648;\n  border-right: 1px solid #464648;\n  border-bottom: 2px solid #464648;\n  border-radius: 8px;\n  overflow:hidden;\n  box-shadow: 0 0 0 1px #1A1A1A, 0 8px 20px 6px #888;\n  margin: 15px 15px 15px 15px;\n`;\n_c = ShadowWrapper;\nconst FormPositionWrapper = styled('div')`\n  position: absolute;\n  z-index: 100;\n  background-color: rgba(0, 0, 0, 0.35);\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c2 = FormPositionWrapper;\nconst FormWrapper = styled(ShadowWrapper)`\n  width: 200px;\n  //height: 300px;\n  background-color: #1E1F21;\n  color: #DDDDDD;\n  box-shadow:unset;\n`;\n_c3 = FormWrapper;\nconst EventTitle = styled('input')`\n  padding: 4px 14px;\n  font-size: .85rem;\n  width: 100%;\n  border: unset;\n  background-color: #1E1F21;\n  color: #DDDDDD;\n  outline: unset;\n  border-bottom: 1px solid #464648;\n`;\n_c4 = EventTitle;\nconst EventBody = styled('input')`\n  padding: 4px 14px;\n  font-size: .85rem;\n  width: 100%;\n  border: unset;\n  background-color: #1E1F21;\n  color: #DDDDDD;\n  outline: unset;\n  border-bottom: 1px solid #464648;\n`;\n_c5 = EventBody;\nconst ButtonsWrapper = styled('div')`\n  padding: 8px 14px;\n  display: flex;\n  justify-content: flex-end;\n`;\n_c6 = ButtonsWrapper;\nexport default function Home() {\n  _s();\n\n  const defaultEvent = {\n    title: '',\n    description: '',\n    date: moment().format('X')\n  };\n  moment.updateLocale('tr', {\n    week: {\n      dow: 1\n    }\n  });\n  const [today, setToday] = useState(moment());\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  const prevHandler = () => setToday(prev => prev.clone().subtract(1, 'month'));\n\n  const todayHandler = () => setToday(moment());\n\n  const nextHandler = () => setToday(prev => prev.clone().add(1, 'month'));\n\n  const [eventList, setEventList] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8001/api/events').then(response => response.json()).then(data => {\n      setEventList(data.events);\n    });\n  }, [today]);\n  const [isShowForm, setShowForm] = useState(false);\n  const [event, setEvent] = useState(null);\n  const [method, setMethod] = useState(null);\n\n  const openFormHandler = (methodName, eventForUpdate) => {\n    console.log('click', methodName);\n    setShowForm(true);\n    setEvent(eventForUpdate || defaultEvent);\n    setMethod(methodName);\n  };\n\n  const cancelButton = () => {\n    setShowForm(false);\n    setEvent(null);\n  };\n\n  const changeEventHandler = (text, field) => {\n    setEvent(prevState => ({ ...prevState,\n      [field]: text\n    }));\n  };\n\n  const url = \"http://localhost:8001\";\n\n  const eventFetchHandler = () => {\n    const fetchUrl = method === 'Update' ? `${url}/event/${event.id}` : `${url}/events`;\n    const httpMethod = method === 'Update' ? 'PUT' : 'POST';\n    fetch(fetchUrl, {\n      method: httpMethod,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify(event)\n    }).then(response => response.json()).then(res => console.log(res));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isShowForm ? /*#__PURE__*/_jsxDEV(FormPositionWrapper, {\n      onClick: cancelButton,\n      children: /*#__PURE__*/_jsxDEV(FormWrapper, {\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(EventTitle, {\n          value: event.title,\n          onChange: e => changeEventHandler(e.target.value, 'title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(EventBody, {\n          value: event.description,\n          onChange: e => changeEventHandler(e.target.value, 'description')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cancelButton,\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: eventFetchHandler,\n            children: method\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this) : null, /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShadowWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Monitor, {\n        today: today,\n        prevHandler: prevHandler,\n        todayHandler: todayHandler,\n        nextHandler: nextHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalendarGrid, {\n        startDay: startDay,\n        today: today,\n        eventList: eventList,\n        openFormHandler: openFormHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"XCE6x6DTr8+2CCNfJGQHpRDw+3E=\");\n\n_c7 = Home;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ShadowWrapper\");\n$RefreshReg$(_c2, \"FormPositionWrapper\");\n$RefreshReg$(_c3, \"FormWrapper\");\n$RefreshReg$(_c4, \"EventTitle\");\n$RefreshReg$(_c5, \"EventBody\");\n$RefreshReg$(_c6, \"ButtonsWrapper\");\n$RefreshReg$(_c7, \"Home\");","map":{"version":3,"sources":["/opt/lampp/htdocs/dene/takvim/CalendarApp/frontend/src/Home.js"],"names":["React","CalendarGrid","Title","Monitor","Navbar","moment","styled","useState","useEffect","ShadowWrapper","FormPositionWrapper","FormWrapper","EventTitle","EventBody","ButtonsWrapper","Home","defaultEvent","title","description","date","format","updateLocale","week","dow","today","setToday","startDay","clone","startOf","prevHandler","prev","subtract","todayHandler","nextHandler","add","eventList","setEventList","fetch","then","response","json","data","events","isShowForm","setShowForm","event","setEvent","method","setMethod","openFormHandler","methodName","eventForUpdate","console","log","cancelButton","changeEventHandler","text","field","prevState","url","eventFetchHandler","fetchUrl","id","httpMethod","headers","body","JSON","stringify","res","e","stopPropagation","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { CalendarGrid } from './components/calendar/CalendarGrid';\nimport { Title } from './components/calendar/Title';\nimport { Monitor } from './components/calendar/Monitor';\nimport Navbar from './layouts/Navbar';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\n\nconst ShadowWrapper = styled('div')`\n  border-top: 1px solid #737374;\n  border-left: 1px solid #464648;\n  border-right: 1px solid #464648;\n  border-bottom: 2px solid #464648;\n  border-radius: 8px;\n  overflow:hidden;\n  box-shadow: 0 0 0 1px #1A1A1A, 0 8px 20px 6px #888;\n  margin: 15px 15px 15px 15px;\n`;\n\nconst FormPositionWrapper = styled('div')`\n  position: absolute;\n  z-index: 100;\n  background-color: rgba(0, 0, 0, 0.35);\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FormWrapper = styled(ShadowWrapper)`\n  width: 200px;\n  //height: 300px;\n  background-color: #1E1F21;\n  color: #DDDDDD;\n  box-shadow:unset;\n`;\n\nconst EventTitle = styled('input')`\n  padding: 4px 14px;\n  font-size: .85rem;\n  width: 100%;\n  border: unset;\n  background-color: #1E1F21;\n  color: #DDDDDD;\n  outline: unset;\n  border-bottom: 1px solid #464648;\n`;\n\nconst EventBody = styled('input')`\n  padding: 4px 14px;\n  font-size: .85rem;\n  width: 100%;\n  border: unset;\n  background-color: #1E1F21;\n  color: #DDDDDD;\n  outline: unset;\n  border-bottom: 1px solid #464648;\n`;\n\nconst ButtonsWrapper = styled('div')`\n  padding: 8px 14px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\n\nexport default function Home() {\n\n  const defaultEvent = {\n    title: '',\n    description: '',\n    date: moment().format('X')\n  }\n\n  moment.updateLocale('tr', { week: { dow: 1 } });\n  const [today, setToday] = useState(moment());\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  const prevHandler = () => setToday(prev => prev.clone().subtract(1, 'month'));\n  const todayHandler = () => setToday(moment());\n  const nextHandler = () => setToday(prev => prev.clone().add(1, 'month'));\n\n  const [eventList, setEventList] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8001/api/events')\n      .then(response => response.json())\n      .then(data => {\n        setEventList(data.events);\n      });\n  }, [today]);\n\n  const [isShowForm, setShowForm] = useState(false);\n  const [event, setEvent] = useState(null);\n  const [method, setMethod] = useState(null)\n  \n  const openFormHandler = (methodName, eventForUpdate) => {\n    console.log('click', methodName);\n    setShowForm(true);\n    setEvent(eventForUpdate || defaultEvent);\n    setMethod(methodName);\n  }\n\n  const cancelButton = () => {\n    setShowForm(false);\n    setEvent(null);\n  }\n\n  const changeEventHandler = (text, field) => {\n    setEvent(prevState => ({\n      ...prevState,\n      [field]: text\n    }))\n  }\n\n  const url = \"http://localhost:8001\";\n  const eventFetchHandler = () => {\n    const fetchUrl = method === 'Update' ? `${url}/event/${event.id}` : `${url}/events`;\n    const httpMethod = method === 'Update' ? 'PUT' : 'POST';\n    fetch(fetchUrl, {\n      method: httpMethod,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify(event)\n    })\n    .then(response => response.json())\n    .then(res => console.log(res))\n  }\n\n  return (\n    <>\n      {\n        isShowForm ? (\n          <FormPositionWrapper onClick={cancelButton}>\n            <FormWrapper onClick={e => e.stopPropagation()}>\n              <EventTitle value={event.title} onChange={e => changeEventHandler(e.target.value, 'title')} />\n              <EventBody value={event.description} onChange={e => changeEventHandler(e.target.value, 'description')} />\n              <ButtonsWrapper>\n                <button onClick={cancelButton}>cancel</button>\n                <button onClick={eventFetchHandler}>{method}</button>\n              </ButtonsWrapper>\n            </FormWrapper>\n          </FormPositionWrapper>\n        ) : null\n      }\n      <Navbar />\n      <ShadowWrapper>\n        <Title />\n        <Monitor\n          today={today}\n          prevHandler={prevHandler}\n          todayHandler={todayHandler}\n          nextHandler={nextHandler}\n        />\n        <CalendarGrid startDay={startDay} today={today} eventList={eventList} openFormHandler={openFormHandler} />\n      </ShadowWrapper>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}