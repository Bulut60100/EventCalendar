{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/dene/CalendarApp/frontend/src/components/calendar/CalendarGrid.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridWrapper = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(7, 1fr);\n    grid-template-rows: repeat(6, 1fr);\n    grid-gap: 1px;\n    background-color: #484848;\n    height: 100vf;\n    box-sizing: border-box;\n`;\n_c = GridWrapper;\nconst CellWrapper = styled.div`\n\tmin-height: 80px;\n\tmin-width: 140px;\n\tbackground-color: ${props => props.isWeekend ? '#27282A' : '#1E1F21'};\n\tcolor: #DDDCDD;\n`;\n_c2 = CellWrapper;\nconst RowInCell = styled.div`\n\tdisplay: flex;\n    justify-content: ${props => props.justifyContent ? props.justifyContent : 'flex-start'};\n`;\n_c3 = RowInCell;\nconst DayWrapper = styled.div`\n\theight: 31px;\n\twidth: 31px;\n    display: flex;\n    font-size: 15px;\n    align-items: center;\n    justify-content: center;\n`;\n_c4 = DayWrapper;\nexport const CalendarGrid = _ref => {\n  let {\n    startDay\n  } = _ref;\n  const totalDay = 42;\n  const day = startDay.clone().subtract(1, 'days');\n  const daysArray = [...Array(42)].map(() => day.add(1, 'day').clone());\n  console.log(daysArray);\n  return /*#__PURE__*/_jsxDEV(GridWrapper, {\n    children: daysArray.map(dayItem => /*#__PURE__*/_jsxDEV(CellWrapper, {\n      isWeekend: dayItem.day() === 6 || dayItem.day() === 0,\n      children: /*#__PURE__*/_jsxDEV(RowInCell, {\n        justifyContent: 'flex-end',\n        children: /*#__PURE__*/_jsxDEV(DayWrapper, {\n          children: dayItem.format(\"D\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this)\n    }, dayItem.format(\"DD-MM-YYYY\"), false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c5 = CalendarGrid;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GridWrapper\");\n$RefreshReg$(_c2, \"CellWrapper\");\n$RefreshReg$(_c3, \"RowInCell\");\n$RefreshReg$(_c4, \"DayWrapper\");\n$RefreshReg$(_c5, \"CalendarGrid\");","map":{"version":3,"sources":["/opt/lampp/htdocs/dene/CalendarApp/frontend/src/components/calendar/CalendarGrid.js"],"names":["React","styled","GridWrapper","div","CellWrapper","props","isWeekend","RowInCell","justifyContent","DayWrapper","CalendarGrid","startDay","totalDay","day","clone","subtract","daysArray","Array","map","add","console","log","dayItem","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,W;AAUN,MAAME,WAAW,GAAGH,MAAM,CAACE,GAAI;AAC/B;AACA;AACA,qBAAqBE,KAAK,IAAIA,KAAK,CAACC,SAAN,GAAkB,SAAlB,GAA8B,SAAU;AACtE;AACA,CALA;MAAMF,W;AAON,MAAMG,SAAS,GAAGN,MAAM,CAACE,GAAI;AAC7B;AACA,uBAAuBE,KAAK,IAAIA,KAAK,CAACG,cAAN,GAAuBH,KAAK,CAACG,cAA7B,GAA8C,YAAa;AAC3F,CAHA;MAAMD,S;AAKN,MAAME,UAAU,GAAGR,MAAM,CAACE,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMM,U;AAUN,OAAO,MAAMC,YAAY,GAAG,QAAgB;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACxC,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,GAAG,GAAGF,QAAQ,CAACG,KAAT,GAAiBC,QAAjB,CAA0B,CAA1B,EAA6B,MAA7B,CAAZ;AACA,QAAMC,SAAS,GAAG,CAAC,GAAGC,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmB,MAAML,GAAG,CAACM,GAAJ,CAAQ,CAAR,EAAW,KAAX,EAAkBL,KAAlB,EAAzB,CAAlB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACA,sBACI,QAAC,WAAD;AAAA,cAEQA,SAAS,CAACE,GAAV,CAAeI,OAAD,iBACV,QAAC,WAAD;AAAgD,MAAA,SAAS,EAAEA,OAAO,CAACT,GAAR,OAAkB,CAAlB,IAAuBS,OAAO,CAACT,GAAR,OAAkB,CAApG;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,cAAc,EAAE,UAA3B;AAAA,+BACI,QAAC,UAAD;AAAA,oBACKS,OAAO,CAACC,MAAR,CAAe,GAAf;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,OAAkBD,OAAO,CAACC,MAAR,CAAe,YAAf,CAAlB;AAAA;AAAA;AAAA;AAAA,YADJ;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CApBM;MAAMb,Y","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst GridWrapper = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(7, 1fr);\n    grid-template-rows: repeat(6, 1fr);\n    grid-gap: 1px;\n    background-color: #484848;\n    height: 100vf;\n    box-sizing: border-box;\n`;\n\nconst CellWrapper = styled.div`\n\tmin-height: 80px;\n\tmin-width: 140px;\n\tbackground-color: ${props => props.isWeekend ? '#27282A' : '#1E1F21'};\n\tcolor: #DDDCDD;\n`;\n\nconst RowInCell = styled.div`\n\tdisplay: flex;\n    justify-content: ${props => props.justifyContent ? props.justifyContent : 'flex-start'};\n`;\n\nconst DayWrapper = styled.div`\n\theight: 31px;\n\twidth: 31px;\n    display: flex;\n    font-size: 15px;\n    align-items: center;\n    justify-content: center;\n`;\n\n\nexport const CalendarGrid = ({startDay}) => {\n    const totalDay = 42;\n    const day = startDay.clone().subtract(1, 'days');\n    const daysArray = [...Array(42)].map(() => day.add(1, 'day').clone());\n    console.log(daysArray);\n    return (\n        <GridWrapper>\n            {\n                daysArray.map((dayItem) => (\n                    <CellWrapper key={dayItem.format(\"DD-MM-YYYY\")} isWeekend={dayItem.day() === 6 || dayItem.day() === 0} >\n                        <RowInCell justifyContent={'flex-end'}>\n                            <DayWrapper>\n                                {dayItem.format(\"D\")}\n                            </DayWrapper>\n                        </RowInCell>\n                    </CellWrapper>\n                ))\n            }\n        </GridWrapper>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}