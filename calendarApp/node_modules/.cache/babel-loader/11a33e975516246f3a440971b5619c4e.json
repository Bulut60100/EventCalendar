{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/dene/takvim/CalendarApp/frontend/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CalendarGrid } from './components/calendar/CalendarGrid';\nimport { Title } from './components/calendar/Title';\nimport { Monitor } from './components/calendar/Monitor';\nimport Navbar from './layouts/Navbar';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShadowWrapper = styled('div')`\n  border-top: 1px solid #737374;\n  border-left: 1px solid #464648;\n  border-right: 1px solid #464648;\n  border-bottom: 2px solid #464648;\n  border-radius: 8px;\n  overflow:hidden;\n  box-shadow: 0 0 0 1px #1A1A1A, 0 8px 20px 6px #888;\n  margin: 15px 15px 15px 15px;\n`;\n_c = ShadowWrapper;\nexport default function Home() {\n  _s();\n\n  moment.updateLocale('tr', {\n    week: {\n      dow: 1\n    }\n  });\n  const [today, setToday] = useState(moment());\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  const prevHandler = () => setToday(prev => prev.clone().subtract(1, 'month'));\n\n  const todayHandler = () => setToday(moment());\n\n  const nextHandler = () => setToday(prev => prev.clone().add(1, 'month'));\n\n  const [eventList, setEventList] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8001/api/events').then(response => response.json()).then(data => {\n      setEventList(data.events);\n    });\n  }, [today]);\n  const [event, setEvent] = useState(null);\n\n  const openFormHandler = (method, eventForUpdate) => {\n    console.log('click', method);\n    setEvent(eventForUpdate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShadowWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Monitor, {\n        today: today,\n        prevHandler: prevHandler,\n        todayHandler: todayHandler,\n        nextHandler: nextHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalendarGrid, {\n        startDay: startDay,\n        today: today,\n        eventList: eventList,\n        openFormHandler: openFormHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"ZQPVHNG/n/Qf0kcFbp2XGv29wFg=\");\n\n_c2 = Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShadowWrapper\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/opt/lampp/htdocs/dene/takvim/CalendarApp/frontend/src/Home.js"],"names":["React","CalendarGrid","Title","Monitor","Navbar","moment","styled","useState","useEffect","ShadowWrapper","Home","updateLocale","week","dow","today","setToday","startDay","clone","startOf","prevHandler","prev","subtract","todayHandler","nextHandler","add","eventList","setEventList","fetch","then","response","json","data","events","event","setEvent","openFormHandler","method","eventForUpdate","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,SAASC,KAAT,QAAsB,6BAAtB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAGH,MAAM,CAAC,KAAD,CAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMG,a;AAYN,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7BL,EAAAA,MAAM,CAACM,YAAP,CAAoB,IAApB,EAA0B;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP;AAAR,GAA1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACF,MAAM,EAAP,CAAlC;AACA,QAAMW,QAAQ,GAAGF,KAAK,CAACG,KAAN,GAAcC,OAAd,CAAsB,OAAtB,EAA+BA,OAA/B,CAAuC,MAAvC,CAAjB;;AAEA,QAAMC,WAAW,GAAG,MAAMJ,QAAQ,CAACK,IAAI,IAAIA,IAAI,CAACH,KAAL,GAAaI,QAAb,CAAsB,CAAtB,EAAyB,OAAzB,CAAT,CAAlC;;AACA,QAAMC,YAAY,GAAG,MAAMP,QAAQ,CAACV,MAAM,EAAP,CAAnC;;AACA,QAAMkB,WAAW,GAAG,MAAMR,QAAQ,CAACK,IAAI,IAAIA,IAAI,CAACH,KAAL,GAAaO,GAAb,CAAiB,CAAjB,EAAoB,OAApB,CAAT,CAAlC;;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACEC,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVL,MAAAA,YAAY,CAACK,IAAI,CAACC,MAAN,CAAZ;AACH,KAJL;AAKH,GANQ,EAMN,CAAClB,KAAD,CANM,CAAT;AAQA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,IAAD,CAAlC;;AACA,QAAM4B,eAAe,GAAG,CAACC,MAAD,EAASC,cAAT,KAA4B;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,MAApB;AACAF,IAAAA,QAAQ,CAACG,cAAD,CAAR;AACD,GAHD;;AAKF,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AACA,QAAA,KAAK,EAAEvB,KADP;AAEA,QAAA,WAAW,EAAEK,WAFb;AAGA,QAAA,YAAY,EAAEG,YAHd;AAIA,QAAA,WAAW,EAAEC;AAJb;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEP,QAAxB;AAAkC,QAAA,KAAK,EAAEF,KAAzC;AAAgD,QAAA,SAAS,EAAEW,SAA3D;AAAsE,QAAA,eAAe,EAAEU;AAAvF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAxCuBzB,I;;MAAAA,I","sourcesContent":["import React from 'react';\nimport { CalendarGrid } from './components/calendar/CalendarGrid';\nimport { Title } from './components/calendar/Title';\nimport { Monitor } from './components/calendar/Monitor';\nimport Navbar from './layouts/Navbar';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\n\nconst ShadowWrapper = styled('div')`\n  border-top: 1px solid #737374;\n  border-left: 1px solid #464648;\n  border-right: 1px solid #464648;\n  border-bottom: 2px solid #464648;\n  border-radius: 8px;\n  overflow:hidden;\n  box-shadow: 0 0 0 1px #1A1A1A, 0 8px 20px 6px #888;\n  margin: 15px 15px 15px 15px;\n`;\n\n\nexport default function Home() {\n\n  moment.updateLocale('tr', { week: { dow: 1 } });\n  const [today, setToday] = useState(moment());\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  const prevHandler = () => setToday(prev => prev.clone().subtract(1, 'month'));\n  const todayHandler = () => setToday(moment());\n  const nextHandler = () => setToday(prev => prev.clone().add(1, 'month'));\n\n  const [eventList, setEventList] = useState([]);\n    useEffect(() => {\n        fetch('http://localhost:8001/api/events')\n            .then(response => response.json())\n            .then(data => {\n                setEventList(data.events);\n            });\n    }, [today]);\n\n    const [event, setEvent] = useState(null);\n    const openFormHandler = (method, eventForUpdate) => {\n      console.log('click',method);\n      setEvent(eventForUpdate);\n    }\n\n  return (\n    <div>\n      <Navbar />\n      <ShadowWrapper>\n        <Title />\n        <Monitor \n        today={today} \n        prevHandler={prevHandler}\n        todayHandler={todayHandler}\n        nextHandler={nextHandler}\n        />\n        <CalendarGrid startDay={startDay} today={today} eventList={eventList} openFormHandler={openFormHandler} />\n      </ShadowWrapper>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}