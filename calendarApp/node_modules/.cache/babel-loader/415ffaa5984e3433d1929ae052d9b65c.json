{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/dene/CalendarApp/frontend/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CalendarGrid } from './components/calendar/CalendarGrid';\nimport { Title } from './components/calendar/Title';\nimport { Monitor } from './components/calendar/Monitor';\nimport Navbar from './layouts/Navbar';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShadowWrapper = styled('div')`\n  border-top: 1px solid #737374;\n  border-left: 1px solid #464648;\n  border-right: 1px solid #464648;\n  border-bottom: 2px solid #464648;\n  border-radius: 8px;\n  overflow:hidden;\n  box-shadow: 0 0 0 1px #1A1A1A, 0 8px 20px 6px #888;\n  margin: 15px 15px 15px 15px;\n`;\n_c = ShadowWrapper;\nexport default function Home() {\n  _s();\n\n  moment.updateLocale('tr', {\n    week: {\n      dow: 1\n    }\n  });\n  const [today, setToday] = useState(moment());\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  const prevHandler = () => setToday(prev => prev.clone().subtract(1, 'month'));\n\n  const todayHandler = () => setToday(moment());\n\n  const nextHandler = () => setToday(prev => prev.clone().add(1, 'month'));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShadowWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Monitor, {\n        today: today,\n        prevHandler: prevHandler,\n        todayHandler: todayHandler,\n        nextHandler: nextHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalendarGrid, {\n        startDay: startDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"xyliNCE4nW6hZ6nRV3HKQTYKm6M=\");\n\n_c2 = Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShadowWrapper\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/opt/lampp/htdocs/dene/CalendarApp/frontend/src/Home.js"],"names":["React","CalendarGrid","Title","Monitor","Navbar","moment","styled","useState","ShadowWrapper","Home","updateLocale","week","dow","today","setToday","startDay","clone","startOf","prevHandler","prev","subtract","todayHandler","nextHandler","add"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,SAASC,KAAT,QAAsB,6BAAtB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,aAAa,GAAGF,MAAM,CAAC,KAAD,CAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAME,a;AAYN,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7BJ,EAAAA,MAAM,CAACK,YAAP,CAAoB,IAApB,EAA0B;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP;AAAR,GAA1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACF,MAAM,EAAP,CAAlC;AACA,QAAMU,QAAQ,GAAGF,KAAK,CAACG,KAAN,GAAcC,OAAd,CAAsB,OAAtB,EAA+BA,OAA/B,CAAuC,MAAvC,CAAjB;;AAEA,QAAMC,WAAW,GAAG,MAAMJ,QAAQ,CAACK,IAAI,IAAIA,IAAI,CAACH,KAAL,GAAaI,QAAb,CAAsB,CAAtB,EAAyB,OAAzB,CAAT,CAAlC;;AACA,QAAMC,YAAY,GAAG,MAAMP,QAAQ,CAACT,MAAM,EAAP,CAAnC;;AACA,QAAMiB,WAAW,GAAG,MAAMR,QAAQ,CAACK,IAAI,IAAIA,IAAI,CAACH,KAAL,GAAaO,GAAb,CAAiB,CAAjB,EAAoB,OAApB,CAAT,CAAlC;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AACA,QAAA,KAAK,EAAEV,KADP;AAEA,QAAA,WAAW,EAAEK,WAFb;AAGA,QAAA,YAAY,EAAEG,YAHd;AAIA,QAAA,WAAW,EAAEC;AAJb;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEP;AAAxB;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzBuBN,I;;MAAAA,I","sourcesContent":["import React from 'react';\nimport { CalendarGrid } from './components/calendar/CalendarGrid';\nimport { Title } from './components/calendar/Title';\nimport { Monitor } from './components/calendar/Monitor';\nimport Navbar from './layouts/Navbar';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { useState } from 'react';\n\nconst ShadowWrapper = styled('div')`\n  border-top: 1px solid #737374;\n  border-left: 1px solid #464648;\n  border-right: 1px solid #464648;\n  border-bottom: 2px solid #464648;\n  border-radius: 8px;\n  overflow:hidden;\n  box-shadow: 0 0 0 1px #1A1A1A, 0 8px 20px 6px #888;\n  margin: 15px 15px 15px 15px;\n`;\n\n\nexport default function Home() {\n\n  moment.updateLocale('tr', { week: { dow: 1 } });\n  const [today, setToday] = useState(moment());\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  const prevHandler = () => setToday(prev => prev.clone().subtract(1, 'month'));\n  const todayHandler = () => setToday(moment());\n  const nextHandler = () => setToday(prev => prev.clone().add(1, 'month'));\n\n  return (\n    <div>\n      <Navbar />\n      <ShadowWrapper>\n        <Title />\n        <Monitor \n        today={today} \n        prevHandler={prevHandler}\n        todayHandler={todayHandler}\n        nextHandler={nextHandler}\n        />\n        <CalendarGrid startDay={startDay} />\n      </ShadowWrapper>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}