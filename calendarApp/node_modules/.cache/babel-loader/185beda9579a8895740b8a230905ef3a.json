{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/dene/takvim/CalendarApp/frontend/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CalendarGrid } from './components/calendar/CalendarGrid';\nimport { Title } from './components/calendar/Title';\nimport { Monitor } from './components/calendar/Monitor';\nimport Navbar from './layouts/Navbar';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ShadowWrapper = styled('div')`\n  border-top: 1px solid #737374;\n  border-left: 1px solid #464648;\n  border-right: 1px solid #464648;\n  border-bottom: 2px solid #464648;\n  border-radius: 8px;\n  overflow:hidden;\n  box-shadow: 0 0 0 1px #1A1A1A, 0 8px 20px 6px #888;\n  margin: 15px 15px 15px 15px;\n`;\n_c = ShadowWrapper;\nconst FormPositionWrapper = styled('div')`\n  position: absolute;\n  z-index: 100;\n  background-color: rgba(0, 0, 0, 0.35);\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c2 = FormPositionWrapper;\nconst FormWrapper = styled(ShadowWrapper)`\n  width: 200px;\n  //height: 300px;\n  background-color: #1E1F21;\n  color: #DDDDDD;\n  box-shadow:unset;\n`;\n_c3 = FormWrapper;\nconst EventTitle = styled('input')`\n  padding: 4px 14px;\n  font-size: .85rem;\n  width: 100%;\n  border: unset;\n  background-color: #1E1F21;\n  color: #DDDDDD;\n  outline: unset;\n  border-bottom: 1px solid #464648;\n`;\n_c4 = EventTitle;\nconst EventBody = styled('input')`\n  padding: 4px 14px;\n  font-size: .85rem;\n  width: 100%;\n  border: unset;\n  background-color: #1E1F21;\n  color: #DDDDDD;\n  outline: unset;\n  border-bottom: 1px solid #464648;\n`;\n_c5 = EventBody;\nconst ButtonsWrapper = styled('div')`\n  padding: 8px 14px;\n  display: flex;\n  justify-content: flex-end;\n`;\n_c6 = ButtonsWrapper;\nexport default function Home() {\n  _s();\n\n  moment.updateLocale('tr', {\n    week: {\n      dow: 1\n    }\n  });\n  const [today, setToday] = useState(moment());\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  const prevHandler = () => setToday(prev => prev.clone().subtract(1, 'month'));\n\n  const todayHandler = () => setToday(moment());\n\n  const nextHandler = () => setToday(prev => prev.clone().add(1, 'month'));\n\n  const [eventList, setEventList] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8001/api/events').then(response => response.json()).then(data => {\n      setEventList(data.events);\n    });\n  }, [today]);\n  const [isShowForm, setShowForm] = useState(false);\n  const [event, setEvent] = useState(null);\n\n  const openFormHandler = (method, eventForUpdate) => {\n    console.log('click', method);\n    setEvent(eventForUpdate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isShowForm ? /*#__PURE__*/_jsxDEV(FormPositionWrapper, {\n      children: /*#__PURE__*/_jsxDEV(FormWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(EventTitle, {\n          value: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(EventBody, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this) : null, /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShadowWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Monitor, {\n        today: today,\n        prevHandler: prevHandler,\n        todayHandler: todayHandler,\n        nextHandler: nextHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalendarGrid, {\n        startDay: startDay,\n        today: today,\n        eventList: eventList,\n        openFormHandler: openFormHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"E3v9ZtYy9fxuc3Rkl/ewggbK1Ig=\");\n\n_c7 = Home;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ShadowWrapper\");\n$RefreshReg$(_c2, \"FormPositionWrapper\");\n$RefreshReg$(_c3, \"FormWrapper\");\n$RefreshReg$(_c4, \"EventTitle\");\n$RefreshReg$(_c5, \"EventBody\");\n$RefreshReg$(_c6, \"ButtonsWrapper\");\n$RefreshReg$(_c7, \"Home\");","map":{"version":3,"sources":["/opt/lampp/htdocs/dene/takvim/CalendarApp/frontend/src/Home.js"],"names":["React","CalendarGrid","Title","Monitor","Navbar","moment","styled","useState","useEffect","ShadowWrapper","FormPositionWrapper","FormWrapper","EventTitle","EventBody","ButtonsWrapper","Home","updateLocale","week","dow","today","setToday","startDay","clone","startOf","prevHandler","prev","subtract","todayHandler","nextHandler","add","eventList","setEventList","fetch","then","response","json","data","events","isShowForm","setShowForm","event","setEvent","openFormHandler","method","eventForUpdate","console","log","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,SAASC,KAAT,QAAsB,6BAAtB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,aAAa,GAAGH,MAAM,CAAC,KAAD,CAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMG,a;AAWN,MAAMC,mBAAmB,GAAGJ,MAAM,CAAC,KAAD,CAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMI,mB;AAaN,MAAMC,WAAW,GAAGL,MAAM,CAACG,aAAD,CAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA,CANA;MAAME,W;AAQN,MAAMC,UAAU,GAAGN,MAAM,CAAC,OAAD,CAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMM,U;AAWN,MAAMC,SAAS,GAAGP,MAAM,CAAC,OAAD,CAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMO,S;AAWN,MAAMC,cAAc,GAAGR,MAAM,CAAC,KAAD,CAAQ;AACrC;AACA;AACA;AACA,CAJA;MAAMQ,c;AAON,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7BV,EAAAA,MAAM,CAACW,YAAP,CAAoB,IAApB,EAA0B;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP;AAAR,GAA1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACF,MAAM,EAAP,CAAlC;AACA,QAAMgB,QAAQ,GAAGF,KAAK,CAACG,KAAN,GAAcC,OAAd,CAAsB,OAAtB,EAA+BA,OAA/B,CAAuC,MAAvC,CAAjB;;AAEA,QAAMC,WAAW,GAAG,MAAMJ,QAAQ,CAACK,IAAI,IAAIA,IAAI,CAACH,KAAL,GAAaI,QAAb,CAAsB,CAAtB,EAAyB,OAAzB,CAAT,CAAlC;;AACA,QAAMC,YAAY,GAAG,MAAMP,QAAQ,CAACf,MAAM,EAAP,CAAnC;;AACA,QAAMuB,WAAW,GAAG,MAAMR,QAAQ,CAACK,IAAI,IAAIA,IAAI,CAACH,KAAL,GAAaO,GAAb,CAAiB,CAAjB,EAAoB,OAApB,CAAT,CAAlC;;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZL,MAAAA,YAAY,CAACK,IAAI,CAACC,MAAN,CAAZ;AACD,KAJH;AAKD,GANQ,EAMN,CAAClB,KAAD,CANM,CAAT;AAQA,QAAM,CAACmB,UAAD,EAAaC,WAAb,IAA4BhC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACiC,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,CAAC,IAAD,CAAlC;;AACA,QAAMmC,eAAe,GAAG,CAACC,MAAD,EAASC,cAAT,KAA4B;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,MAArB;AACAF,IAAAA,QAAQ,CAACG,cAAD,CAAR;AACD,GAHD;;AAKA,sBACE;AAAA,eAEIN,UAAU,gBACR,QAAC,mBAAD;AAAA,6BACE,QAAC,WAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEE,KAAK,CAACO;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,cAAD;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADQ,GAWN,IAbR,eAeE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE,QAAC,aAAD;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AACE,QAAA,KAAK,EAAE5B,KADT;AAEE,QAAA,WAAW,EAAEK,WAFf;AAGE,QAAA,YAAY,EAAEG,YAHhB;AAIE,QAAA,WAAW,EAAEC;AAJf;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEP,QAAxB;AAAkC,QAAA,KAAK,EAAEF,KAAzC;AAAgD,QAAA,SAAS,EAAEW,SAA3D;AAAsE,QAAA,eAAe,EAAEY;AAAvF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AA6BD;;GAvDuB3B,I;;MAAAA,I","sourcesContent":["import React from 'react';\nimport { CalendarGrid } from './components/calendar/CalendarGrid';\nimport { Title } from './components/calendar/Title';\nimport { Monitor } from './components/calendar/Monitor';\nimport Navbar from './layouts/Navbar';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\n\nconst ShadowWrapper = styled('div')`\n  border-top: 1px solid #737374;\n  border-left: 1px solid #464648;\n  border-right: 1px solid #464648;\n  border-bottom: 2px solid #464648;\n  border-radius: 8px;\n  overflow:hidden;\n  box-shadow: 0 0 0 1px #1A1A1A, 0 8px 20px 6px #888;\n  margin: 15px 15px 15px 15px;\n`;\n\nconst FormPositionWrapper = styled('div')`\n  position: absolute;\n  z-index: 100;\n  background-color: rgba(0, 0, 0, 0.35);\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FormWrapper = styled(ShadowWrapper)`\n  width: 200px;\n  //height: 300px;\n  background-color: #1E1F21;\n  color: #DDDDDD;\n  box-shadow:unset;\n`;\n\nconst EventTitle = styled('input')`\n  padding: 4px 14px;\n  font-size: .85rem;\n  width: 100%;\n  border: unset;\n  background-color: #1E1F21;\n  color: #DDDDDD;\n  outline: unset;\n  border-bottom: 1px solid #464648;\n`;\n\nconst EventBody = styled('input')`\n  padding: 4px 14px;\n  font-size: .85rem;\n  width: 100%;\n  border: unset;\n  background-color: #1E1F21;\n  color: #DDDDDD;\n  outline: unset;\n  border-bottom: 1px solid #464648;\n`;\n\nconst ButtonsWrapper = styled('div')`\n  padding: 8px 14px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\n\nexport default function Home() {\n\n  moment.updateLocale('tr', { week: { dow: 1 } });\n  const [today, setToday] = useState(moment());\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  const prevHandler = () => setToday(prev => prev.clone().subtract(1, 'month'));\n  const todayHandler = () => setToday(moment());\n  const nextHandler = () => setToday(prev => prev.clone().add(1, 'month'));\n\n  const [eventList, setEventList] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8001/api/events')\n      .then(response => response.json())\n      .then(data => {\n        setEventList(data.events);\n      });\n  }, [today]);\n\n  const [isShowForm, setShowForm] = useState(false);\n  const [event, setEvent] = useState(null);\n  const openFormHandler = (method, eventForUpdate) => {\n    console.log('click', method);\n    setEvent(eventForUpdate);\n  }\n\n  return (\n    <>\n      {\n        isShowForm ? (\n          <FormPositionWrapper>\n            <FormWrapper>\n              <EventTitle value={event.title} />\n              <EventBody />\n              <ButtonsWrapper>\n                <button>cancel</button>\n                <button>+</button>\n              </ButtonsWrapper>\n            </FormWrapper>\n          </FormPositionWrapper>\n        ) : null\n      }\n      <Navbar />\n      <ShadowWrapper>\n        <Title />\n        <Monitor\n          today={today}\n          prevHandler={prevHandler}\n          todayHandler={todayHandler}\n          nextHandler={nextHandler}\n        />\n        <CalendarGrid startDay={startDay} today={today} eventList={eventList} openFormHandler={openFormHandler} />\n      </ShadowWrapper>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}