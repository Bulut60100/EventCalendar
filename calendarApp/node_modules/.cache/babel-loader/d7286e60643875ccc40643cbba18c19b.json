{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/dene/CalendarApp/frontend/src/components/calendar/CalendarGrid.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GridWrapper = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(7, 1fr);\n    grid-gap: 1px;\n    background-color: ${props => props.isHeader ? '#1E1F21' : '#4D4C4D'};\n\t${props => props.isHeader && `border-bottom: 1px solid #4D4C4D`}\n`;\n_c = GridWrapper;\nconst CellWrapper = styled.div`\n\tmin-height: ${props => props.isHeader ? 24 : 80}px;\n\tmin-width: 140px;\n\tbackground-color: ${props => props.isWeekday ? '#27282A' : '#1E1F21'};\n\tcolor: #DDDCDD;\n`;\n_c2 = CellWrapper;\nconst RowInCell = styled.div`\n\tdisplay: flex;\n    justify-content: ${props => props.justifyContent ? props.justifyContent : 'flex-start'};\n`;\n_c3 = RowInCell;\nconst DayWrapper = styled.div`\n\theight: 31px;\n\twidth: 31px;\n    display: flex;\n    font-size: 15px;\n    align-items: center;\n    justify-content: center;\n`;\n_c4 = DayWrapper;\nconst CurrentDay = styled('div')`\n  height: 100%;\n  width: 100%;\n  background: #f00;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c5 = CurrentDay;\nexport const CalendarGrid = _ref => {\n  let {\n    startDay\n  } = _ref;\n  const day = startDay.clone().subtract(1, 'days');\n  const daysArray = [...Array(42)].map(() => day.add(1, 'day').clone());\n\n  const isCurrentDay = day => moment().isSame(day, 'day');\n\n  console.log(daysArray);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridWrapper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GridWrapper, {\n      children: daysArray.map(dayItem => /*#__PURE__*/_jsxDEV(CellWrapper, {\n        isWeekday: dayItem.day() === 6 || dayItem.day() === 0,\n        children: /*#__PURE__*/_jsxDEV(RowInCell, {\n          justifyContent: 'flex-end',\n          children: /*#__PURE__*/_jsxDEV(DayWrapper, {\n            children: [!isCurrentDay(dayItem) && dayItem.format(\"D\"), isCurrentDay(dayItem) && /*#__PURE__*/_jsxDEV(CurrentDay, {\n              children: dayItem.format(\"D\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, dayItem.unix(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c6 = CalendarGrid;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"GridWrapper\");\n$RefreshReg$(_c2, \"CellWrapper\");\n$RefreshReg$(_c3, \"RowInCell\");\n$RefreshReg$(_c4, \"DayWrapper\");\n$RefreshReg$(_c5, \"CurrentDay\");\n$RefreshReg$(_c6, \"CalendarGrid\");","map":{"version":3,"sources":["/opt/lampp/htdocs/dene/CalendarApp/frontend/src/components/calendar/CalendarGrid.js"],"names":["React","styled","moment","GridWrapper","div","props","isHeader","CellWrapper","isWeekday","RowInCell","justifyContent","DayWrapper","CurrentDay","CalendarGrid","startDay","day","clone","subtract","daysArray","Array","map","add","isCurrentDay","isSame","console","log","dayItem","format","unix"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAI;AAC/B;AACA;AACA;AACA,wBAAwBC,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA6B,SAAU;AACxE,GAAGD,KAAK,IAAIA,KAAK,CAACC,QAAN,IAAmB,kCAAkC;AACjE,CANA;KAAMH,W;AAQN,MAAMI,WAAW,GAAGN,MAAM,CAACG,GAAI;AAC/B,eAAeC,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,EAAjB,GAAsB,EAAG;AACjD;AACA,qBAAqBD,KAAK,IAAIA,KAAK,CAACG,SAAN,GAAkB,SAAlB,GAA8B,SAAU;AACtE;AACA,CALA;MAAMD,W;AAON,MAAME,SAAS,GAAGR,MAAM,CAACG,GAAI;AAC7B;AACA,uBAAuBC,KAAK,IAAIA,KAAK,CAACK,cAAN,GAAuBL,KAAK,CAACK,cAA7B,GAA8C,YAAa;AAC3F,CAHA;MAAMD,S;AAKN,MAAME,UAAU,GAAGV,MAAM,CAACG,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMO,U;AASN,MAAMC,UAAU,GAAGX,MAAM,CAAC,KAAD,CAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMW,U;AAWN,OAAO,MAAMC,YAAY,GAAG,QAAgB;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACxC,QAAMC,GAAG,GAAGD,QAAQ,CAACE,KAAT,GAAiBC,QAAjB,CAA0B,CAA1B,EAA6B,MAA7B,CAAZ;AACA,QAAMC,SAAS,GAAG,CAAC,GAAGC,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmB,MAAML,GAAG,CAACM,GAAJ,CAAQ,CAAR,EAAW,KAAX,EAAkBL,KAAlB,EAAzB,CAAlB;;AAEA,QAAMM,YAAY,GAAIP,GAAD,IAASb,MAAM,GAAGqB,MAAT,CAAgBR,GAAhB,EAAqB,KAArB,CAA9B;;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACA,sBACI;AAAA,4BACA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,WAAD;AAAA,gBAGQA,SAAS,CAACE,GAAV,CAAeM,OAAD,iBACV,QAAC,WAAD;AACA,QAAA,SAAS,EAAEA,OAAO,CAACX,GAAR,OAAkB,CAAlB,IAAuBW,OAAO,CAACX,GAAR,OAAkB,CADpD;AAAA,+BAII,QAAC,SAAD;AAAW,UAAA,cAAc,EAAE,UAA3B;AAAA,iCACI,QAAC,UAAD;AAAA,uBACK,CAACO,YAAY,CAACI,OAAD,CAAb,IAA0BA,OAAO,CAACC,MAAR,CAAe,GAAf,CAD/B,EAEKL,YAAY,CAACI,OAAD,CAAZ,iBAAyB,QAAC,UAAD;AAAA,wBAAaA,OAAO,CAACC,MAAR,CAAe,GAAf;AAAb;AAAA;AAAA;AAAA;AAAA,oBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJJ,SAEKD,OAAO,CAACE,IAAR,EAFL;AAAA;AAAA;AAAA;AAAA,cADJ;AAHR;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADJ;AAyBH,CA/BM;MAAMf,Y","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nconst GridWrapper = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(7, 1fr);\n    grid-gap: 1px;\n    background-color: ${props => props.isHeader ? '#1E1F21' : '#4D4C4D'};\n\t${props => props.isHeader && `border-bottom: 1px solid #4D4C4D`}\n`;\n\nconst CellWrapper = styled.div`\n\tmin-height: ${props => props.isHeader ? 24 : 80}px;\n\tmin-width: 140px;\n\tbackground-color: ${props => props.isWeekday ? '#27282A' : '#1E1F21'};\n\tcolor: #DDDCDD;\n`;\n\nconst RowInCell = styled.div`\n\tdisplay: flex;\n    justify-content: ${props => props.justifyContent ? props.justifyContent : 'flex-start'};\n`;\n\nconst DayWrapper = styled.div`\n\theight: 31px;\n\twidth: 31px;\n    display: flex;\n    font-size: 15px;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst CurrentDay = styled('div')`\n  height: 100%;\n  width: 100%;\n  background: #f00;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n\nexport const CalendarGrid = ({startDay}) => {\n    const day = startDay.clone().subtract(1, 'days');\n    const daysArray = [...Array(42)].map(() => day.add(1, 'day').clone());\n\n    const isCurrentDay = (day) => moment().isSame(day, 'day');\n    console.log(daysArray);\n    return (\n        <>\n        <GridWrapper>\n\n        </GridWrapper>\n        <GridWrapper>\n\n            {\n                daysArray.map((dayItem) => (\n                    <CellWrapper\n                    isWeekday={dayItem.day() === 6 || dayItem.day() === 0}\n                    key={dayItem.unix()}\n                     >\n                        <RowInCell justifyContent={'flex-end'}>\n                            <DayWrapper>\n                                {!isCurrentDay(dayItem) && dayItem.format(\"D\")}\n                                {isCurrentDay(dayItem) && <CurrentDay>{dayItem.format(\"D\")}</CurrentDay>}\n                            </DayWrapper>\n                        </RowInCell>\n                    </CellWrapper>\n                ))\n            }\n        </GridWrapper>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}